name: Database Migration (MSSQL)

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'changelog/mssql/**'
      - 'docker-compose.mssql.yml'
      - 'liquibase-mssql.properties'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'changelog/mssql/**'
      - 'docker-compose.mssql.yml'
      - 'liquibase-mssql.properties'

jobs:
  migrate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Show Docker versions
        run: |
          docker version
          docker compose version

      - name: Prepare drivers directory and JDBC
        run: |
          mkdir -p drivers
          curl -L "https://repo1.maven.org/maven2/com/microsoft/sqlserver/mssql-jdbc/12.6.1.jre11/mssql-jdbc-12.6.1.jre11.jar" -o drivers/mssql-jdbc-12.6.1.jre11.jar

      - name: Start MSSQL
        run: |
          docker compose -f docker-compose.mssql.yml up -d mssql

      - name: Wait for MSSQL
        run: |
          echo "Waiting for MSSQL to be ready..."
          timeout 90 bash -c 'until docker compose -f docker-compose.mssql.yml exec -T mssql /opt/mssql-tools18/bin/sqlcmd -C -S localhost -U sa -P Your_strong_password123 -Q "SELECT 1" >/dev/null 2>&1; do sleep 2; done'

      - name: Create database if missing
        run: |
          docker compose -f docker-compose.mssql.yml exec -T mssql /opt/mssql-tools18/bin/sqlcmd -C -S localhost -U sa -P Your_strong_password123 -Q "IF DB_ID('testdb') IS NULL CREATE DATABASE testdb;"

      - name: Validate Migration
        run: |
          docker run --rm --network liquibase_default \
            -v "${{ github.workspace }}:/workspace" \
            liquibase/liquibase:4.25.1 \
            --url="jdbc:sqlserver://mssql:1433;databaseName=testdb;encrypt=true;trustServerCertificate=true" \
            --username=sa --password=Your_strong_password123 \
            --driver=com.microsoft.sqlserver.jdbc.SQLServerDriver \
            --classpath=/workspace/drivers \
            --changeLogFile=/workspace/changelog/mssql/changelog.xml validate

      - name: Run Liquibase Migration
        run: |
          docker run --rm --network liquibase_default \
            -v "${{ github.workspace }}:/workspace" \
            liquibase/liquibase:4.25.1 \
            --url="jdbc:sqlserver://mssql:1433;databaseName=testdb;encrypt=true;trustServerCertificate=true" \
            --username=sa --password=Your_strong_password123 \
            --driver=com.microsoft.sqlserver.jdbc.SQLServerDriver \
            --classpath=/workspace/drivers \
            --changeLogFile=/workspace/changelog/mssql/changelog.xml update

      - name: Status
        run: |
          docker run --rm --network liquibase_default \
            -v "${{ github.workspace }}:/workspace" \
            liquibase/liquibase:4.25.1 \
            --url="jdbc:sqlserver://mssql:1433;databaseName=testdb;encrypt=true;trustServerCertificate=true" \
            --username=sa --password=Your_strong_password123 \
            --driver=com.microsoft.sqlserver.jdbc.SQLServerDriver \
            --classpath=/workspace/drivers \
            --changeLogFile=/workspace/changelog/mssql/changelog.xml status

      - name: Cleanup
        if: always()
        run: |
          docker compose -f docker-compose.mssql.yml down -v
